process runMRIQC {
    container "${params.containerPath_mriqc}"
    
    // Define CPU and memory resources 
    cpus 4
    memory '8 GB'

    // Set error handling
    errorStrategy 'ignore'
    maxRetries 2

    // Tagging the process with the specitfied participant
    tag { "Participant: ${participant}" }

    // Directory to publish output
    publishDir "${params.mriqcOutputDir}/sub-${participant}", mode: 'copy', overwrite: true

    input:
    val participant

    // Output paths for different result types from MRIQC
    output:
    path "reports/*.html", emit: 'reports'  // HTML reports generated by MRIQC
    path "metrics/*.json", emit: 'metrics'  // JSON files containing metrics
    path "figures/*", emit: 'figures'  // Figures created by MRIQC

    script:
    """
    mkdir -p ${params.mriqcOutputDir}/sub-${participant}

    export SINGULARITY_BINDPATH="${params.bidsDir}/bids_output,${params.mriqcOutputDir},${params.workdir}"

    # Run MRIQC within the container 
    singularity exec --bind ${params.bidsDir}/bids_output:/bidsdir \\  // Bind BIDS directory
    --bind ${params.mriqcOutputDir}:/outdir \\  // Bind output directory
    --bind ${params.workdir}:/workdir \\  // Bind working directory
    ${params.containerPath_mriqc} \\  // Specify MRIQC container path
    mriqc /bidsdir /outdir participant \\  // Run MRIQC in participant mode
    --participant_label ${participant} \\  // Process only the specified participant
    --nprocs ${task.cpus} \\  // Set the number of CPUs for MRIQC
    --omp-nthreads ${task.cpus} \\  // Set the number of threads for parallel processing
    --mem_gb 8 \\  // Set the memory limit in GB
    --no-sub \\  // Disable subject-based output folders in output directory
    -vvv \\  // Verbose logging level
    --verbose-reports \\  // Enable detailed reports
    --work-dir /workdir > ${params.mriqcOutputDir}/sub-${participant}/mriqc_log_${participant}.txt 2>&1  // Log output and errors

    # Check if MRIQC completed successfully; if not, log the error
    if [ \$? -ne 0 ]; then
        echo "MRIQC crashed for participant ${participant}" >> ${params.mriqcOutputDir}/mriqc_crash_log.txt
    fi
    """
}
